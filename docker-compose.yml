#  docker-compose for DEV!!!
version: '3.1'

services:
  mysql:
    image: mysql:8
    volumes:
      - db-data:/var/lib/mysql/:rw
    environment:
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - "127.0.0.1:3306:3306"

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/dev/nginx/hosts:/etc/nginx/conf.d
      - ./docker/dev/nginx/logs:/var/log/nginx
    depends_on:
      - php

#  drupal:
#    image: drupal:10-fpm-alpine
##    ports:
##      - 8080:80
#    volumes:
#      - /var/www/html/modules
#      - /var/www/html/profiles
#      - /var/www/html/themes
#      # this takes advantage of the feature in Docker that a new anonymous
#      # volume (which is what we're creating here) will be initialized with the
#      # existing content of the image at the same location
#      - /var/www/html/sites
#    restart: always

  php:
    build: docker/dev/php
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    environment:
      PHP_IDE_CONFIG: "serverName=xdebug-docker"
      XDEBUG_CONFIG: "client_host=host.docker.internal start_with_request=trigger log_level=0"
      XDEBUG_MODE: "debug"
      XDEBUG_SESSION: "PHPSTORM"
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db-data:
